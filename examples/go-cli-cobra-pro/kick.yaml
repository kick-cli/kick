name: "go-cli-cobra-pro"
description: "Production-grade Go CLI template with Cobra, tests, lint, release, CI"
version: "1.0.0"
repository: "https://github.com/kick-cli/cutr"

variables:
  project_name:
    type: string
    prompt: "Project name"
    default: "pro-cli"
    pattern: "^[a-z][a-z0-9-]*$"
    help: "Lowercase, digits and hyphens only"

  module_name:
    type: string
    prompt: "Go module name"
    default: "github.com/user/pro-cli"
    pattern: "^[a-zA-Z0-9._/-]+$"
    help: "Go module path (e.g., github.com/user/project)"

  author_name:
    type: string
    prompt: "Author name"
    default: "Your Name"

  author_email:
    type: string
    prompt: "Author email"
    default: "you@example.com"

  description:
    type: string
    prompt: "Project description"
    default: "A production-ready CLI application in Go"

  license:
    type: choice
    prompt: "License"
    choices: ["MIT", "Apache-2.0", "GPL-3.0", "BSD-3-Clause"]
    default: "MIT"

  include_config:
    type: boolean
    prompt: "Include configuration with Viper?"
    default: true

  include_version:
    type: boolean
    prompt: "Include version command?"
    default: true

  include_ci:
    type: boolean
    prompt: "Include GitHub Actions CI?"
    default: true

  init_git:
    type: boolean
    prompt: "Initialize a Git repository?"
    default: true

  go_version:
    type: string
    prompt: "Minimum Go version"
    default: "1.24"

hooks:
  pre_generation:
    - "echo 'üöÄ Creating Go CLI project: {{.project_name}}'"
    - "echo 'Module: {{.module_name}}'"
    - "echo 'Author: {{.author_name}} <{{.author_email}}>'"

  post_generation:
    - "echo 'üì¶ Initializing Go module...'"
    - "go mod init {{.module_name}}"
    - "echo '‚¨áÔ∏è  Installing dependencies...'"
    - "go get github.com/spf13/cobra@latest"
    - "go get github.com/stretchr/testify@latest"
    - "go get github.com/spf13/viper@latest"
    - "go get github.com/rs/zerolog@latest"
    - "go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest"
    - "echo 'üîß Tidying dependencies...'"
    - "go mod tidy"
    - "echo '‚úÖ Setting executable permissions...'"
    - "chmod +x scripts/build.sh"
    - "{{- if .init_git}}echo 'üå± Initializing git repository...'{{- end }}"
    - "{{- if .init_git}}git init{{- end }}"
    - "{{- if .init_git}}git branch -M main{{- end }}"
    - "{{- if .init_git}}mod='{{.module_name}}'; if [ \"${mod#github.com/}\" != \"$mod\" ]; then git remote add origin \"git@github.com:${mod#github.com/}.git\"; fi{{- end }}"
    - "echo 'üéâ Project {{.project_name}} is ready!'"

template:
  ignore_patterns:
    - "*.tmp"
    - ".DS_Store"
  keep_permissions: true
